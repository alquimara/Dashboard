import Head from 'next/head'
import { Flex,Button} from '@chakra-ui/react'
import { InputComponent } from '../components/Input'
import { useRef } from 'react'
import { SubmitHandler, useForm } from 'react-hook-form'
import * as yup from 'yup'
import {yupResolver} from '@hookform/resolvers/yup'

type signInProps={
  email:string,
  password:string

}
const signInSchema= yup.object().shape({
  email:yup.string().required('E-mail obrigatório').email('E-mail invalido'),
  password:yup.string().required('Senha obrigatória')
})

export default function SignIn() {
  const {register, handleSubmit,formState} =useForm({
    resolver:yupResolver(signInSchema)
  })
  const {errors} = formState

  
const handleSignIn: SubmitHandler<signInProps>= async (values)=>{
  await new Promise(resolve=> setTimeout(resolve, 2000))

  }
  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
      <Flex 
      w="100vw"
      h="100vh"
      align="center"
      justify="center"
      >
        <Flex as="form" 
        w="100%" 
        maxWidth="360px" 
        bg="gray.800" 
        p="8" 
        borderRadius="8" 
        flexDir="column" 
        gap="4"
        onSubmit={handleSubmit(handleSignIn)}
        >
          <InputComponent type="email"  label='E-mail:' {...register('email')} error={errors.email}/>
          <InputComponent type="password"  label='Password:'{...register('password')} error={errors.password}/>
          <Button 
          type='submit' 
          mt="6" 
          colorScheme="pink"
          isLoading={formState.isSubmitting}
          >
            Entrar
          </Button>
        </Flex>
      </Flex>
      </main>
    </>
  )
}
